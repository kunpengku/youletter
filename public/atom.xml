<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>由来</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.youletter.cn/"/>
  <updated>2018-04-25T07:36:56.433Z</updated>
  <id>http://www.youletter.cn/</id>
  
  <author>
    <name>kunpengku</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>parallel 命令</title>
    <link href="http://www.youletter.cn/2018/04/25/parallel-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.youletter.cn/2018/04/25/parallel-命令/</id>
    <published>2018-04-25T07:36:38.000Z</published>
    <updated>2018-04-25T07:36:56.433Z</updated>
    
    <content type="html"><![CDATA[<p>parallel –gnu wget –content-disposition  &lt; u2.txt</p><p>parallel –gnu tar xzf  &lt; log.txtu</p><p>parallel –gnu gunzip   &lt; file</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;parallel –gnu wget –content-disposition  &amp;lt; u2.txt&lt;/p&gt;
&lt;p&gt;parallel –gnu tar xzf  &amp;lt; log.txtu&lt;/p&gt;
&lt;p&gt;parallel –gnu gunzip   &amp;lt; file&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spring boot aop 使用</title>
    <link href="http://www.youletter.cn/2018/04/17/spring-boot-aop-%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.youletter.cn/2018/04/17/spring-boot-aop-使用/</id>
    <published>2018-04-17T11:25:12.000Z</published>
    <updated>2018-04-17T11:25:31.709Z</updated>
    
    <content type="html"><![CDATA[<p>使用Spring Boot的AOP处理自定义注解<br><a href="https://crane-yuan.github.io/2018/01/11/spring-boot-aop-custom-annotation/" target="_blank" rel="noopener">https://crane-yuan.github.io/2018/01/11/spring-boot-aop-custom-annotation/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用Spring Boot的AOP处理自定义注解&lt;br&gt;&lt;a href=&quot;https://crane-yuan.github.io/2018/01/11/spring-boot-aop-custom-annotation/&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>wh-question</title>
    <link href="http://www.youletter.cn/2018/04/14/wh-question/"/>
    <id>http://www.youletter.cn/2018/04/14/wh-question/</id>
    <published>2018-04-14T07:21:08.000Z</published>
    <updated>2018-04-14T09:57:16.876Z</updated>
    
    <content type="html"><![CDATA[<p>wh-question 指的是 what, when, where, who, whom, which, whose, why and how 这些词开头的句子，用来询问信息 ，他们的回答不可以是 yes 或者 no。</p><h1 id="如何形成-wh-questions"><a href="#如何形成-wh-questions" class="headerlink" title="如何形成 wh-questions"></a>如何形成 wh-questions</h1><ul><li>With an auxiliary verb</li></ul><p>wh- + an auxiliary verb (be, do or have) + subject + main verb  </p><p>wh- + a modal verb + subject + main verb</p><ul><li>Without an auxiliary verb</li></ul><p>当what, who, which or whose是主语，或主语的一部分时，不需要助动词。</p><p>What fell off the wall? </p><p>Which horse won?</p><p>Who bought this? </p><p>Whose phone rang?</p><p># </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;wh-question 指的是 what, when, where, who, whom, which, whose, why and how 这些词开头的句子，用来询问信息 ，他们的回答不可以是 yes 或者 no。&lt;/p&gt;
&lt;h1 id=&quot;如何形成-wh-questio
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>what drives everything going</title>
    <link href="http://www.youletter.cn/2018/04/14/what-drives-everything-going/"/>
    <id>http://www.youletter.cn/2018/04/14/what-drives-everything-going/</id>
    <published>2018-04-14T07:18:56.000Z</published>
    <updated>2018-04-14T07:19:52.934Z</updated>
    
    <content type="html"><![CDATA[<p>what drives everything going</p><p>Electricity</p><p>what drives electircity going?</p><p>Time.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;what drives everything going&lt;/p&gt;
&lt;p&gt;Electricity&lt;/p&gt;
&lt;p&gt;what drives electircity going?&lt;/p&gt;
&lt;p&gt;Time.&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Verb phrases</title>
    <link href="http://www.youletter.cn/2018/04/14/Verb-phrases/"/>
    <id>http://www.youletter.cn/2018/04/14/Verb-phrases/</id>
    <published>2018-04-14T05:49:49.000Z</published>
    <updated>2018-04-14T07:14:40.210Z</updated>
    
    <content type="html"><![CDATA[<p>Verb phrases = [modal verb] + [auxiliary verb] + main verb</p><pre><code>| 1 | 2 | 3 | 4 | 5 </code></pre><p>—     |—|—|—|—|—-<br>subject |modal verb|perfect have | continuous be| passive be| main verb<br>        |followed by base form | followed by -ed form | followed by -ing form | followed by -ed form<br>    Prices | | | | | up<br>    He | will | | | | understand<br>    The builders |  | had | | | arrived<br>    The show | |  | is | | starting<br>    Four people | | | | were | arrested<br>    Seats | can’t | | | be | reserved</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Verb phrases = [modal verb] + [auxiliary verb] + main verb&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| 1 | 2 | 3 | 4 | 5 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;—     |—|—|—|—|—-&lt;br&gt;subje
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>determiner</title>
    <link href="http://www.youletter.cn/2018/04/12/determiner/"/>
    <id>http://www.youletter.cn/2018/04/12/determiner/</id>
    <published>2018-04-12T10:11:57.000Z</published>
    <updated>2018-04-12T10:15:21.085Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-an-and-the"><a href="#A-an-and-the" class="headerlink" title="A/an and the"></a>A/an and the</h2><p>A/an 表示说话的参与者不知道的东西。</p><p>The before a noun shows that what is referred to is already known to the speaker, listener, writer and/or reader (it is the definite article):</p><p>The before a noun shows that what is referred to is already known to the speaker, listener, writer and/or reader (it is the definite article):</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;A-an-and-the&quot;&gt;&lt;a href=&quot;#A-an-and-the&quot; class=&quot;headerlink&quot; title=&quot;A/an and the&quot;&gt;&lt;/a&gt;A/an and the&lt;/h2&gt;&lt;p&gt;A/an 表示说话的参与者不知道的东西。&lt;/p&gt;
&lt;p&gt;Th
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nouns 名词</title>
    <link href="http://www.youletter.cn/2018/04/12/nouns-%E5%90%8D%E8%AF%8D/"/>
    <id>http://www.youletter.cn/2018/04/12/nouns-名词/</id>
    <published>2018-04-12T03:01:59.000Z</published>
    <updated>2018-04-12T03:27:22.745Z</updated>
    
    <content type="html"><![CDATA[<p>名词来指示一个人，动物，或东西。</p><p>指人 boy , girl<br>指动物和东西 cat, book ,tree</p><p>Proper nouns 专有名词，首字母大写。</p><p>Concrete nouns 具体名词， table</p><p>Abstract nouns 抽象名词 ， love， feelings</p><p>识别名词并不容易通过他们的形式看出来。但还是有一些后缀，很大可能就是名词。</p><p><a href="https://dictionary.cambridge.org/zht/%E8%AA%9E%E6%B3%95/%E8%8B%B1%E5%BC%8F%E8%AA%9E%E6%B3%95/about-nouns/nouns" target="_blank" rel="noopener">https://dictionary.cambridge.org/zht/%E8%AA%9E%E6%B3%95/%E8%8B%B1%E5%BC%8F%E8%AA%9E%E6%B3%95/about-nouns/nouns</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;名词来指示一个人，动物，或东西。&lt;/p&gt;
&lt;p&gt;指人 boy , girl&lt;br&gt;指动物和东西 cat, book ,tree&lt;/p&gt;
&lt;p&gt;Proper nouns 专有名词，首字母大写。&lt;/p&gt;
&lt;p&gt;Concrete nouns 具体名词， table&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>apache benchmarking tool </title>
    <link href="http://www.youletter.cn/2018/04/11/apache-benchmarking-tool/"/>
    <id>http://www.youletter.cn/2018/04/11/apache-benchmarking-tool/</id>
    <published>2018-04-11T07:24:31.000Z</published>
    <updated>2018-04-11T07:25:08.908Z</updated>
    
    <content type="html"><![CDATA[<p>ab -n2000 -c40 -H “Authorization:Bearer 4702ccaa-8250-43e1-b70b-b4ea5904b9d4” youletter.cn/api/me</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ab -n2000 -c40 -H “Authorization:Bearer 4702ccaa-8250-43e1-b70b-b4ea5904b9d4” youletter.cn/api/me&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sentences</title>
    <link href="http://www.youletter.cn/2018/04/03/sentences/"/>
    <id>http://www.youletter.cn/2018/04/03/sentences/</id>
    <published>2018-04-03T09:48:29.000Z</published>
    <updated>2018-04-03T10:35:10.517Z</updated>
    
    <content type="html"><![CDATA[<p>The straight line belongs to men, the curved one to God. – Antoni Gaudi.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The straight line belongs to men, the curved one to God. – Antoni Gaudi.&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker 学习</title>
    <link href="http://www.youletter.cn/2018/03/26/Docker-%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.youletter.cn/2018/03/26/Docker-学习/</id>
    <published>2018-03-26T15:55:54.000Z</published>
    <updated>2018-03-27T07:01:54.477Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 守护进程会 监听 /var/run/docker.sock 这个socket， 来获取来自 客户端的 Docker请求。</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p>docker info  返回docker 基本信息 </p><p>docker run -i -t ubuntu /bin/bash</p><p>-i 打开 STDIN</p><p>-t 创建一个 伪tty ，提供交互式 SHELL。</p><p>重新启动一起 exit的容器<br>docker restart 82e856f8f48b</p><p>查看所有容器列表<br>docker ps -a<br>只显示当前运行的容器<br>docker ps </p><p>容器命名。 –name<br>docker run -it –name fupeng_ubuntu -d ubuntu /bin/bash</p><p>创建tty ，接入容器<br>docker exec -it fupeng_ubuntu bash</p><p>删除容器<br>docker rm</p><p>容器也是一个 进程。</p><p>镜像run起来，就是容器。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Docker 守护进程会 监听 /var/run/docker.sock 这个socket， 来获取来自 客户端的 Docker请求。&lt;/p&gt;
&lt;h3 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>create redis cluster</title>
    <link href="http://www.youletter.cn/2018/03/26/create-redis-cluster/"/>
    <id>http://www.youletter.cn/2018/03/26/create-redis-cluster/</id>
    <published>2018-03-26T03:43:51.000Z</published>
    <updated>2018-03-27T07:17:38.751Z</updated>
    
    <content type="html"><![CDATA[<p>配置目录创建</p><p>mac: cd /usr/local/etc , mkdir redis, cd redis</p><p>other linux: cd /etc/redis</p><p>集群目录创建</p><p>mkdir cluster  为 redis-cluster 创建新目录   </p><p>cd cluster &amp;&amp; mkdir 7000 7001 7002</p><p>将redis的配置文件 redis.conf 复制至 7000-7002目录下</p><p>修改 redis.conf （以 7000/redis.conf 为例）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">port 7000</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes-7000.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>启动服务<br>redis-server 7000/redis.conf</p><p>redis-server 7001/redis.conf</p><p>redis-server 7002/redis.conf</p><p>节点握手</p><p>redis-cli -c -p 7000</p><p>cluster meet 127.0.0.1 7001</p><p>cluster meet 127.0.0.1 7002</p><p>分配槽</p><p>redis-cli -h 127.0.0.1 -p 7000 cluster addslots {0..5461}</p><p>redis-cli -h 127.0.0.1 -p 7001 cluster addslots {5462..10922}</p><p>redis-cli -h 127.0.0.1 -p 7002 cluster addslots {10923..16383}</p><p>检查</p><p>redis-cli -c -p 7000</p><p>cluster nodes , 是否能看到3个master，且已分配好槽</p><p>set test test，是否能看到写值redirected</p><h3 id="redis-trib创建-cluster（注：需要安装-ruby）"><a href="#redis-trib创建-cluster（注：需要安装-ruby）" class="headerlink" title="redis-trib创建 cluster（注：需要安装 ruby）"></a>redis-trib创建 cluster（注：需要安装 ruby）</h3><p>gem install redis </p><p>wget <a href="http://download.redis.io/redis-stable/src/redis-trib.rb" target="_blank" rel="noopener">http://download.redis.io/redis-stable/src/redis-trib.rb</a> </p><p>ruby redis-trib.rb create –replicas 1 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005</p><h1 id="Docker-搭建redis-Cluster"><a href="#Docker-搭建redis-Cluster" class="headerlink" title="Docker 搭建redis Cluster"></a>Docker 搭建redis Cluster</h1><p>docker pull grokzen/redis-cluster</p><p>【linux】docker run -d –net=host –name rcluster grokzen/redis-cluster:latest</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置目录创建&lt;/p&gt;
&lt;p&gt;mac: cd /usr/local/etc , mkdir redis, cd redis&lt;/p&gt;
&lt;p&gt;other linux: cd /etc/redis&lt;/p&gt;
&lt;p&gt;集群目录创建&lt;/p&gt;
&lt;p&gt;mkdir cluster  为 redi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>密码策略要求</title>
    <link href="http://www.youletter.cn/2018/03/24/%E5%AF%86%E7%A0%81%E7%AD%96%E7%95%A5%E8%A6%81%E6%B1%82/"/>
    <id>http://www.youletter.cn/2018/03/24/密码策略要求/</id>
    <published>2018-03-24T13:19:37.000Z</published>
    <updated>2018-03-24T13:21:42.345Z</updated>
    
    <content type="html"><![CDATA[<p>密码策略要求：<br>Password Policy Requirements:</p><p>1．        至少有8个字符长度；<br>At least 8 characters in length;</p><p>2．        至少包含以下四类字符中的三类字符：<br>Contains at least three of the following four types of characters:</p><p>a.    英文大写字母(A 到 Z)；<br>Capital letters (A to Z);</p><p>b.    英文小写字母(a 到 z)；<br>Lowercase letters (a to z);</p><p>c.    10 个基本数字(0 到 9)；<br>          Basic numbers (0 to 9);</p><p>d．非字母字符(例如 @、!、$、#、%等)。<br>Non-alphabetic characters (e.g. @, !, $, #, %, etc.)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;密码策略要求：&lt;br&gt;Password Policy Requirements:&lt;/p&gt;
&lt;p&gt;1．        至少有8个字符长度；&lt;br&gt;At least 8 characters in length;&lt;/p&gt;
&lt;p&gt;2．        至少包含以下四类字符中的三类字
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>english words pronounce</title>
    <link href="http://www.youletter.cn/2018/03/23/english-words-pronounce/"/>
    <id>http://www.youletter.cn/2018/03/23/english-words-pronounce/</id>
    <published>2018-03-23T02:45:56.000Z</published>
    <updated>2018-03-23T02:48:21.742Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.youtube.com/watch?v=GoHV4W5vxCo" target="_blank" rel="noopener">https://www.youtube.com/watch?v=GoHV4W5vxCo</a></p><p>1000 words<br><a href="https://www.youtube.com/watch?v=DP5gAh5kA-A" target="_blank" rel="noopener">https://www.youtube.com/watch?v=DP5gAh5kA-A</a></p><p>All English Lessons — build your vocabulary<br><a href="https://www.youtube.com/channel/UC_HytfXJ43beiwZ5rhi0PwA/videos" target="_blank" rel="noopener">https://www.youtube.com/channel/UC_HytfXJ43beiwZ5rhi0PwA/videos</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=GoHV4W5vxCo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.youtube.com/watch?v=GoHV4W5vxCo&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQL effective</title>
    <link href="http://www.youletter.cn/2018/03/10/SQL-effective/"/>
    <id>http://www.youletter.cn/2018/03/10/SQL-effective/</id>
    <published>2018-03-10T07:20:53.000Z</published>
    <updated>2018-03-10T08:03:11.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Data-Model-Design"><a href="#Data-Model-Design" class="headerlink" title="Data Model Design"></a>Data Model Design</h1><p>Item 1 : Verify That all tables have a primary key.</p><p>AUTO_INCREMENT 自增字段</p><p>referential integrity (RI) </p><p>主键尽可能简单，不需要被更新。</p><p>integrity 完整性</p><p>Item 2 : Eliminate Redundant Storage of Data items</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Data-Model-Design&quot;&gt;&lt;a href=&quot;#Data-Model-Design&quot; class=&quot;headerlink&quot; title=&quot;Data Model Design&quot;&gt;&lt;/a&gt;Data Model Design&lt;/h1&gt;&lt;p&gt;Item 1 : V
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQL cook</title>
    <link href="http://www.youletter.cn/2018/03/09/SQL-cook/"/>
    <id>http://www.youletter.cn/2018/03/09/SQL-cook/</id>
    <published>2018-03-09T02:47:20.000Z</published>
    <updated>2018-03-09T05:53:30.524Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为列取有意义的名字-AS"><a href="#为列取有意义的名字-AS" class="headerlink" title="为列取有意义的名字 AS"></a>为列取有意义的名字 AS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select cnt as count from emp;</span><br><span class="line">select cnt count from emp;</span><br></pre></td></tr></table></figure><p>有些数据库不需要as ，如MySQL，但 有as也不错。</p><h2 id="在where子句中使用别名"><a href="#在where子句中使用别名" class="headerlink" title="在where子句中使用别名"></a>在where子句中使用别名</h2><p><code>select cnt as count from emp where count = 2;</code><br>上面这个SQL会失败 ，报找不到count列</p><p>解决方案，将查询作为内联视图就可以使用 其中的别名了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from (</span><br><span class="line">select cnt as count from emp</span><br><span class="line">) x</span><br><span class="line">where count = 10004</span><br></pre></td></tr></table></figure></p><p>因为 WHERE子句是在 select 之前处理的， 所以在处理 where子句之前， count并不存在 。要在where处理完后，count才能生效。 然后，from 子句是在  where 之前处理的。把原查询放到  from 子句中， 在最外层的 where子句之前  。 这样最外层的where子句就能 看到 count 了。 </p><p>本例将 内联视图 命名为 x ，并不是所有数据库都需要。 MySQL 需要。</p><h2 id="在select语句中使用条件逻辑"><a href="#在select语句中使用条件逻辑" class="headerlink" title="在select语句中使用条件逻辑"></a>在select语句中使用条件逻辑</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select ename ,</span><br><span class="line">case </span><br><span class="line">where sal &lt; 2000 then &apos;under&apos;</span><br><span class="line">where sal &gt; 4000 then &apos;over&apos;</span><br><span class="line">else &apos;ok&apos;</span><br><span class="line">end as status</span><br><span class="line">from emp</span><br></pre></td></tr></table></figure><h2 id="限制返回的行"><a href="#限制返回的行" class="headerlink" title="限制返回的行"></a>限制返回的行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select  * from emp limit 5</span><br></pre></td></tr></table></figure><h2 id="查找空值"><a href="#查找空值" class="headerlink" title="查找空值"></a>查找空值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where comm is null;</span><br><span class="line"></span><br><span class="line">select * from emp where comm is not null;</span><br></pre></td></tr></table></figure><p>null 不等于 任何值， 包括自身， 所以不能用 = 或者 != 来比较 。只能用 is null 或者 is not null 来判断。</p><h2 id="按模式搜索"><a href="#按模式搜索" class="headerlink" title="按模式搜索  %"></a>按模式搜索  %</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where depto like &quot;%er%%&quot;</span><br></pre></td></tr></table></figure><p>% 可以匹配任何字符序列。 上面这个SQL表示 包含er的字符串。</p><h2 id="已指定次序返回查询结果-order-by"><a href="#已指定次序返回查询结果-order-by" class="headerlink" title="已指定次序返回查询结果 order by"></a>已指定次序返回查询结果 order by</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select ename from emp where depto = 10 order by sal;</span><br><span class="line"></span><br><span class="line">select ename from emp where depto = 10 order by sal desc;</span><br></pre></td></tr></table></figure><p>order by 默认以升序排列 asc 。  指定 desc 降序排列   </p><p>按照多个字段排序时 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;为列取有意义的名字-AS&quot;&gt;&lt;a href=&quot;#为列取有意义的名字-AS&quot; class=&quot;headerlink&quot; title=&quot;为列取有意义的名字 AS&quot;&gt;&lt;/a&gt;为列取有意义的名字 AS&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://www.youletter.cn/2018/03/08/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://www.youletter.cn/2018/03/08/正则表达式/</id>
    <published>2018-03-08T13:32:37.000Z</published>
    <updated>2018-03-19T11:08:57.579Z</updated>
    
    <content type="html"><![CDATA[<p>Java 正则表达式</p><p>至少包含一个中文</p><p><code>String pattern = &quot;.*[\\u4e00-\\u9fa5].*&quot;;</code></p><p>邮箱匹配</p><p><code>String regexp = &quot;^[_\\.0-9a-zA-Z+-]+@([0-9a-zA-Z]+[0-9a-zA-Z-]*\\.)+[a-zA-Z]{2,4}$&quot;</code></p><p>国外手机号匹配 </p><p><code>regexp = &quot;^\\s*|\\+(?:[0-9] ?){6,14}[0-9]$&quot;</code></p><p>匹配一个版本号 1.2.3<br><code>regexp = &quot;^[1-9]\\d?(\\.(0|[1-9]\\d?)){2}$&quot;</code></p><p>第 19 单元：正则表达式<br><a href="https://www.ibm.com/developerworks/cn/java/j-perry-regular-expressions/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/j-perry-regular-expressions/index.html</a></p><p>正则表达式测试页面<br><a href="http://www.regexplanet.com/advanced/java/index.html" target="_blank" rel="noopener">http://www.regexplanet.com/advanced/java/index.html</a></p><p>史上最全的正则表达式-匹配中英文、字母和数字<br><a href="http://blog.csdn.net/qq_28633249/article/details/77686976" target="_blank" rel="noopener">http://blog.csdn.net/qq_28633249/article/details/77686976</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java 正则表达式&lt;/p&gt;
&lt;p&gt;至少包含一个中文&lt;/p&gt;
&lt;p&gt;&lt;code&gt;String pattern = &amp;quot;.*[\\u4e00-\\u9fa5].*&amp;quot;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;邮箱匹配&lt;/p&gt;
&lt;p&gt;&lt;code&gt;String regexp
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java集合</title>
    <link href="http://www.youletter.cn/2018/03/04/Java%E9%9B%86%E5%90%88/"/>
    <id>http://www.youletter.cn/2018/03/04/Java集合/</id>
    <published>2018-03-04T01:41:03.000Z</published>
    <updated>2018-03-07T07:44:30.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Set-to-List"><a href="#Set-to-List" class="headerlink" title="Set to List"></a>Set to List</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Lists.newArrayList(ids)</span><br></pre></td></tr></table></figure><h1 id="list-To-MAP"><a href="#list-To-MAP" class="headerlink" title="list To MAP"></a>list To MAP</h1><p>其中 key为 Apple的一个属性，value为Apple </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Long, Apple&gt; appleMap = apples</span><br><span class="line">    .stream()</span><br><span class="line">    .collect(Collectors.toMap(Apple::getId, dto -&gt; dto))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line"># list To MAP </span><br><span class="line"></span><br><span class="line">其中key为Apple的一个属性， value为Apple的另一个属性</span><br></pre></td></tr></table></figure><p>Map&lt;Long, String&gt; appleMap = apples<br>    .stream()<br>    .collect(Collectors.toMap(Apple::getId, Apple::getName))</p><p><code>`</code>    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Set-to-List&quot;&gt;&lt;a href=&quot;#Set-to-List&quot; class=&quot;headerlink&quot; title=&quot;Set to List&quot;&gt;&lt;/a&gt;Set to List&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>忘记密码的短信码验证策略</title>
    <link href="http://www.youletter.cn/2018/02/12/%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E7%9A%84%E7%9F%AD%E4%BF%A1%E7%A0%81%E9%AA%8C%E8%AF%81%E7%AD%96%E7%95%A5/"/>
    <id>http://www.youletter.cn/2018/02/12/忘记密码的短信码验证策略/</id>
    <published>2018-02-12T01:45:59.000Z</published>
    <updated>2018-02-12T01:49:01.339Z</updated>
    
    <content type="html"><![CDATA[<p>忘记密码，要用短信验证，什么流程。</p><p>step 1 请输入正确的用户名，如果正确转第二步。</p><p>step 2 提示，你预留的手机号是 <strong><em>**</em></strong>0123， 请输入预留的手机号，点击获取 验证码， 并将 验证码填入框内。</p><p>step 3 如果短信验证码正确，出现2个输入框， 输入两次密码，改密码成功。</p><p>step 4 返回登录页面。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;忘记密码，要用短信验证，什么流程。&lt;/p&gt;
&lt;p&gt;step 1 请输入正确的用户名，如果正确转第二步。&lt;/p&gt;
&lt;p&gt;step 2 提示，你预留的手机号是 &lt;strong&gt;&lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;0123， 请输入预留的手机号，点击获取 验证码， 并将 验证
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mac 下安装MySQL-python</title>
    <link href="http://www.youletter.cn/2018/02/12/mac-%E4%B8%8B%E5%AE%89%E8%A3%85MySQL-python/"/>
    <id>http://www.youletter.cn/2018/02/12/mac-下安装MySQL-python/</id>
    <published>2018-02-12T01:36:20.000Z</published>
    <updated>2018-02-12T01:39:48.381Z</updated>
    
    <content type="html"><![CDATA[<p>step 1 sudo su<br>切到root用户</p><p>step 2 </p><p>pip install MySQL-python</p><p>完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;step 1 sudo su&lt;br&gt;切到root用户&lt;/p&gt;
&lt;p&gt;step 2 &lt;/p&gt;
&lt;p&gt;pip install MySQL-python&lt;/p&gt;
&lt;p&gt;完成。&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小学,初中,高中用英语怎么表示</title>
    <link href="http://www.youletter.cn/2018/02/11/%E5%B0%8F%E5%AD%A6-%E5%88%9D%E4%B8%AD-%E9%AB%98%E4%B8%AD%E7%94%A8%E8%8B%B1%E8%AF%AD%E6%80%8E%E4%B9%88%E8%A1%A8%E7%A4%BA/"/>
    <id>http://www.youletter.cn/2018/02/11/小学-初中-高中用英语怎么表示/</id>
    <published>2018-02-11T03:45:57.000Z</published>
    <updated>2018-02-11T04:16:12.795Z</updated>
    
    <content type="html"><![CDATA[<p>18岁之前的童年时期，一般是这么上学的。</p><p>1， 幼儿园 （3-6岁）<br>有的幼儿园是3年，也有4年的幼儿园。 叫法有 preschool, nursery school, or kindergarten。 国内基本使用的是kindergarten的叫法，美国多用preschool。</p><p>2，在后面的12年里， 一般有2阶段 和 3阶段不同的教育系统。<br>两阶段的就是 分别对应 Primary school 和     Secondary school。<br>三阶段的分为 Elementary school， Middle school，High school。</p><p>国内使用二合一的版本。 即有两阶段 小学 和 中学， 然后又有3阶段， 小学，初中，高中。 (厉害了。)</p><p>所以 7-12岁 上6年小学 应该叫 Elementary school 这是美国叫法， 英国的小学叫法是 Primary school。 这两种叫法基本都可以。因为每个国家的学年设置都不同。所以没有完全匹配的叫法。</p><p>13-18 ，这6年在中国 分为 初中 和 高中。 这两者都属于中学，中学为 Secondary school。 然后中学一分为二， 13-15 为 初中， 16-18为高中。 所以</p><p>初中 是 junior secondary（Lower secondary） </p><p>高中 时 senior secondary （Higher secondary）。</p><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><a href="https://en.wikipedia.org/wiki/Educational_stage" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Educational_stage</a></p><p><a href="https://en.wikipedia.org/wiki/K%E2%80%9312" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/K%E2%80%9312</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;18岁之前的童年时期，一般是这么上学的。&lt;/p&gt;
&lt;p&gt;1， 幼儿园 （3-6岁）&lt;br&gt;有的幼儿园是3年，也有4年的幼儿园。 叫法有 preschool, nursery school, or kindergarten。 国内基本使用的是kindergarten的叫法，美
      
    
    </summary>
    
    
      <category term="schooling" scheme="http://www.youletter.cn/tags/schooling/"/>
    
  </entry>
  
</feed>
